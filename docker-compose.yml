version: "3"
services:

  postgres:
    image: postgres:alpine
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/10-schema.sql
    healthcheck:
      test: ["CMD", "pg_isready"]
    environment:
      POSTGRES_USER: acoustid
      POSTGRES_DB: acoustid_priv

  postgres-test:
    image: postgres:alpine
    ports:
      - "127.0.0.1:15432:5432"
    tmpfs:
      - /var/lib/postgres
    volumes:
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/10-schema.sql
      - ./sql/fixtures.sql:/docker-entrypoint-initdb.d/20-fixtures.sql
    healthcheck:
      test: ["CMD", "pg_isready"]
    environment:
      POSTGRES_USER: acoustid
      POSTGRES_DB: acoustid_priv_test

  api:
    image: docker.oxygene.sk/acoustid/priv
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile.build}
    ports:
      - "127.0.0.1:3382:3382"
    environment:
      ACOUSTID_PRIV_DB_HOST: postgres
      ACOUSTID_PRIV_DB_NAME: acoustid_priv
    depends_on:
      - postgres

  test:
    image: golang:1.9
    command: ["go", "test", "-v", "github.com/acoustid/priv/..."]
    volumes:
      - .:/go/src/github.com/acoustid/priv
    environment:
      ACOUSTID_PRIV_TEST_DB_HOST: postgres-test
      ACOUSTID_PRIV_TEST_DB_NAME: acoustid_priv_test
    depends_on:
      - postgres-test
